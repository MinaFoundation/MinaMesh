/*
 * Rosetta
 *
 * Build Once. Integrate Your Blockchain Everywhere. 
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BlockEventType : BlockEventType determines if a BlockEvent represents the addition or removal of a block. 
/// BlockEventType determines if a BlockEvent represents the addition or removal of a block. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BlockEventType {
    #[serde(rename = "block_added")]
    Added,
    #[serde(rename = "block_removed")]
    Removed,

}

impl std::fmt::Display for BlockEventType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Added => write!(f, "block_added"),
            Self::Removed => write!(f, "block_removed"),
        }
    }
}

impl Default for BlockEventType {
    fn default() -> BlockEventType {
        Self::Added
    }
}

