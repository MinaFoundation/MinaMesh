{
  "db_name": "PostgreSQL",
  "query": "WITH RECURSIVE\n  chain AS (\n    (\n      SELECT\n        b1.block_winner_id,\n        b1.chain_status::TEXT,\n        b1.creator_id,\n        b1.global_slot_since_genesis,\n        b1.global_slot_since_hard_fork,\n        b1.height,\n        b1.id,\n        b1.last_vrf_output,\n        b1.ledger_hash,\n        b1.min_window_density,\n        b1.next_epoch_data_id,\n        b1.parent_hash,\n        b1.parent_id,\n        b1.proposed_protocol_version_id,\n        b1.protocol_version_id,\n        b1.snarked_ledger_hash_id,\n        b1.staking_epoch_data_id,\n        b1.state_hash,\n        b1.sub_window_densities,\n        b1.timestamp,\n        b1.total_currency\n      FROM\n        blocks b1\n      WHERE\n        b1.height=(\n          SELECT\n            max(b2.height)\n          FROM\n            blocks b2\n        )\n      ORDER BY\n        b1.timestamp ASC,\n        b1.state_hash ASC\n      LIMIT\n        1\n    )\n    UNION ALL\n    SELECT\n      b.block_winner_id,\n      b.chain_status::TEXT,\n      b.creator_id,\n      b.global_slot_since_genesis,\n      b.global_slot_since_hard_fork,\n      b.height,\n      b.id,\n      b.last_vrf_output,\n      b.ledger_hash,\n      b.min_window_density,\n      b.next_epoch_data_id,\n      b.parent_hash,\n      b.parent_id,\n      b.proposed_protocol_version_id,\n      b.protocol_version_id,\n      b.snarked_ledger_hash_id,\n      b.staking_epoch_data_id,\n      b.state_hash,\n      b.sub_window_densities,\n      b.timestamp,\n      b.total_currency\n    FROM\n      blocks b\n      INNER JOIN chain ON b.id=chain.parent_id\n      AND chain.id<>chain.parent_id\n      AND chain.chain_status<>'canonical'\n  )\nSELECT\n  c.block_winner_id AS \"block_winner_id!\",\n  c.chain_status AS \"chain_status: ChainStatus\",\n  c.creator_id AS \"creator_id!\",\n  c.global_slot_since_genesis AS \"global_slot_since_genesis!\",\n  c.global_slot_since_hard_fork AS \"global_slot_since_hard_fork!\",\n  c.height AS \"height!\",\n  c.id AS \"id!\",\n  c.last_vrf_output AS \"last_vrf_output!\",\n  c.ledger_hash AS \"ledger_hash!\",\n  c.min_window_density AS \"min_window_density!\",\n  c.next_epoch_data_id AS \"next_epoch_data_id!\",\n  c.parent_hash AS \"parent_hash!\",\n  c.parent_id AS \"parent_id\",\n  c.proposed_protocol_version_id AS \"proposed_protocol_version_id\",\n  c.protocol_version_id AS \"protocol_version_id!\",\n  c.snarked_ledger_hash_id AS \"snarked_ledger_hash_id!\",\n  c.staking_epoch_data_id AS \"staking_epoch_data_id!\",\n  c.state_hash AS \"state_hash!\",\n  c.sub_window_densities AS \"sub_window_densities!\",\n  c.timestamp AS \"timestamp!\",\n  c.total_currency AS \"total_currency!\",\n  creator_pk.value AS \"creator\",\n  block_winner_pk.value AS \"winner\"\nFROM\n  chain c\n  INNER JOIN public_keys creator_pk ON creator_pk.id=c.creator_id\n  INNER JOIN public_keys block_winner_pk ON block_winner_pk.id=c.block_winner_id\nWHERE\n  c.height=$1\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "block_winner_id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "chain_status: ChainStatus",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "creator_id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "global_slot_since_genesis!",
        "type_info": "Int8"
      },
      {
        "ordinal": 4,
        "name": "global_slot_since_hard_fork!",
        "type_info": "Int8"
      },
      {
        "ordinal": 5,
        "name": "height!",
        "type_info": "Int8"
      },
      {
        "ordinal": 6,
        "name": "id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 7,
        "name": "last_vrf_output!",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "ledger_hash!",
        "type_info": "Text"
      },
      {
        "ordinal": 9,
        "name": "min_window_density!",
        "type_info": "Int8"
      },
      {
        "ordinal": 10,
        "name": "next_epoch_data_id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 11,
        "name": "parent_hash!",
        "type_info": "Text"
      },
      {
        "ordinal": 12,
        "name": "parent_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 13,
        "name": "proposed_protocol_version_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 14,
        "name": "protocol_version_id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 15,
        "name": "snarked_ledger_hash_id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 16,
        "name": "staking_epoch_data_id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 17,
        "name": "state_hash!",
        "type_info": "Text"
      },
      {
        "ordinal": 18,
        "name": "sub_window_densities!",
        "type_info": "Int8Array"
      },
      {
        "ordinal": 19,
        "name": "timestamp!",
        "type_info": "Text"
      },
      {
        "ordinal": 20,
        "name": "total_currency!",
        "type_info": "Text"
      },
      {
        "ordinal": 21,
        "name": "creator",
        "type_info": "Text"
      },
      {
        "ordinal": 22,
        "name": "winner",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Int8"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      false,
      false
    ]
  },
  "hash": "d330fa9523885915dc32f79ef70760c0b69cfe1ab8aaf921e4e70fd1f59627d6"
}
