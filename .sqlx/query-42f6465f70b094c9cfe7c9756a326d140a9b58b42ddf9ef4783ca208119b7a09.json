{
  "db_name": "PostgreSQL",
  "query": "WITH\n  zkapp_commands_info AS (\n    SELECT\n      zc.id,\n      zc.memo,\n      zc.hash,\n      pk_fee_payer.value AS fee_payer,\n      pk_update_body.value AS pk_update_body,\n      zfpb.fee,\n      zfpb.valid_until,\n      zfpb.nonce,\n      bzc.sequence_no,\n      bzc.status AS \"status: TransactionStatus\",\n      zaub.balance_change,\n      bzc.block_id,\n      b.state_hash,\n      b.height,\n      token_update_body.value AS token,\n      ARRAY(\n        SELECT\n          unnest(zauf.failures)\n        FROM\n          zkapp_account_update_failures AS zauf\n        WHERE\n          zauf.id=ANY (bzc.failure_reasons_ids)\n      ) AS failure_reasons\n    FROM\n      zkapp_commands AS zc\n      INNER JOIN blocks_zkapp_commands AS bzc ON zc.id=bzc.zkapp_command_id\n      INNER JOIN zkapp_fee_payer_body AS zfpb ON zc.zkapp_fee_payer_body_id=zfpb.id\n      INNER JOIN public_keys AS pk_fee_payer ON zfpb.public_key_id=pk_fee_payer.id\n      INNER JOIN blocks AS b ON bzc.block_id=b.id\n      AND (\n        b.chain_status='canonical'\n        OR b.chain_status='pending'\n      )\n      LEFT JOIN zkapp_account_update AS zau ON zau.id=ANY (zc.zkapp_account_updates_ids)\n      INNER JOIN zkapp_account_update_body AS zaub ON zau.body_id=zaub.id\n      INNER JOIN account_identifiers AS ai_update_body ON zaub.account_identifier_id=ai_update_body.id\n      INNER JOIN public_keys AS pk_update_body ON ai_update_body.public_key_id=pk_update_body.id\n      INNER JOIN tokens AS token_update_body ON ai_update_body.token_id=token_update_body.id\n    WHERE\n      (\n        $1>=b.height\n        OR $1 IS NULL\n      )\n      AND (\n        $2=zc.hash\n        OR $2 IS NULL\n      )\n      AND (\n        (\n          (\n            $3=pk_fee_payer.value\n            AND $4=''\n          )\n          OR (\n            $3=pk_update_body.value\n            AND $4=token_update_body.value\n          )\n        )\n        OR (\n          $3 IS NULL\n          AND $4 IS NULL\n        )\n      )\n      AND (\n        $5=bzc.status\n        OR $5 IS NULL\n      )\n      AND (\n        $6=bzc.status\n        OR $6 IS NULL\n      )\n      AND (\n        (\n          $7=pk_fee_payer.value\n          OR $7=pk_update_body.value\n        )\n        OR $7 IS NULL\n      )\n  ),\n  zkapp_commands_ids AS (\n    SELECT DISTINCT\n      id,\n      block_id,\n      sequence_no\n    FROM\n      zkapp_commands_info\n  ),\n  id_count AS (\n    SELECT\n      count(*) AS total_count\n    FROM\n      zkapp_commands_ids\n  )\nSELECT\n  zc.*,\n  id_count.total_count\nFROM\n  id_count,\n  (\n    SELECT\n      *\n    FROM\n      zkapp_commands_ids\n    ORDER BY\n      block_id,\n      id,\n      sequence_no\n    LIMIT\n      $8\n    OFFSET\n      $9\n  ) AS ids\n  INNER JOIN zkapp_commands_info AS zc ON ids.id=zc.id\n  AND ids.block_id=zc.block_id\n  AND ids.sequence_no=zc.sequence_no\nORDER BY\n  ids.block_id,\n  ids.id,\n  ids.sequence_no\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "memo",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "hash",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "fee_payer",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "pk_update_body",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "fee",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "valid_until",
        "type_info": "Int8"
      },
      {
        "ordinal": 7,
        "name": "nonce",
        "type_info": "Int8"
      },
      {
        "ordinal": 8,
        "name": "sequence_no",
        "type_info": "Int4"
      },
      {
        "ordinal": 9,
        "name": "status: TransactionStatus",
        "type_info": {
          "Custom": {
            "name": "transaction_status",
            "kind": {
              "Enum": [
                "applied",
                "failed"
              ]
            }
          }
        }
      },
      {
        "ordinal": 10,
        "name": "balance_change",
        "type_info": "Text"
      },
      {
        "ordinal": 11,
        "name": "block_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 12,
        "name": "state_hash",
        "type_info": "Text"
      },
      {
        "ordinal": 13,
        "name": "height",
        "type_info": "Int8"
      },
      {
        "ordinal": 14,
        "name": "token",
        "type_info": "Text"
      },
      {
        "ordinal": 15,
        "name": "failure_reasons",
        "type_info": "TextArray"
      },
      {
        "ordinal": 16,
        "name": "total_count",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Text",
        "Text",
        "Text",
        {
          "Custom": {
            "name": "transaction_status",
            "kind": {
              "Enum": [
                "applied",
                "failed"
              ]
            }
          }
        },
        {
          "Custom": {
            "name": "transaction_status",
            "kind": {
              "Enum": [
                "applied",
                "failed"
              ]
            }
          }
        },
        "Text",
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      null,
      null
    ]
  },
  "hash": "42f6465f70b094c9cfe7c9756a326d140a9b58b42ddf9ef4783ca208119b7a09"
}
