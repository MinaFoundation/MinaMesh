name: Release
on:
  push:
    branches: [john-debug]

env:
  ECR_REPOSITORY_URL: docker.io
  ECR_REPOSITORY_NAME: minafoundation/mina-mesh

jobs:
  publish:
    runs-on: minafoundation-default-runners
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üîç Extract build args from mina.yaml
        if: github.event_name == 'release'
        run: |
          for network in mainnet devnet; do
            echo "MINA_BASE_TAG_${network^^}=$(yq ".supported_releases.$network.mina_base_tag" mina.yaml)" >> $GITHUB_ENV
            echo "DEBIAN_RELEASE_CHANNEL_${network^^}=$(yq ".supported_releases.$network.debian_release_channel" mina.yaml)" >> $GITHUB_ENV
          done

      - name: üê≥ Login to Docker Hub
        if: github.event_name == 'release'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_IO_USERNAME }}
          password: ${{ secrets.DOCKER_IO_TOKEN }}

      - name: üõ†Ô∏è Build and üöÄ Push Docker Images
        if: github.event_name == 'release'
        run: |
          for network in mainnet devnet; do
            MINA_BASE_TAG_VAR="MINA_BASE_TAG_${network^^}"
            DEBIAN_RELEASE_CHANNEL_VAR="DEBIAN_RELEASE_CHANNEL_${network^^}"

            docker build --build-arg MINA_BASE_TAG=${!MINA_BASE_TAG_VAR} \
                         --build-arg MINA_NETWORK=$network \
                         --build-arg DEBIAN_RELEASE_CHANNEL=${!DEBIAN_RELEASE_CHANNEL_VAR} \
                         -t ${{ env.ECR_REPOSITORY_URL}}/${{ env.ECR_REPOSITORY_NAME }}:$network-latest \
                         .
          done

          docker push --all-tags ${{ env.ECR_REPOSITORY_URL}}/${{ env.ECR_REPOSITORY_NAME }}
